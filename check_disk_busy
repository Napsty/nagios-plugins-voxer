#!/usr/bin/env bash
#
# Check for disk busy on SmartOS
#
# Author: Dave Eddy <dave@voxer.com>
# Date: 11/16/12
# License: MIT

sample_time=1 # seconds to sample

# Extract the values from kstat
getvals() {
	kstat -p ::"$disk":{rtime,wtime,snaptime}
}

# populate the kstat keys into variables
populate() {
	local i=$1
	while read name val; do
		IFS=: read _ _ _ key <<< "$name"
		read "$key$i" <<< "$val"
	done < <(getvals)
}

warning=90
critical=95
while getopts 'w:c:' option; do
	case "$option" in
		w) warning=$OPTARG;;
		c) critical=$OPTARG;;
	esac
done
shift $((OPTIND - 1))

disk=${1:-sd1}

# grab the values, sleep for $sample_time seconds, grab more values
populate 1
sleep "$sample_time"
populate 2

# calculate the percentage of time spent doing work during $sample_time seconds
busy=$(bc <<< "((100 * $rtime2 + $wtime2) - (100 * $rtime1 + $wtime1)) / ($snaptime2 - $snaptime1)")

# alert
if [[ -z "$busy" ]]; then
	echo 'unknown: error retrieving data'
	echo '- possible disks -' >&2
	kstat -lc disk :::class | awk -F: '{print $3}' >&2
	exit 3
elif (( busy >= critical )); then
	echo -n 'critical: '
	ret=2
elif (( busy >= warning )); then
	echo -n 'warning: '
	ret=1
else
	echo -n 'ok: '
	ret=0
fi

echo "disk $busy% busy (warning=$warning%, critical=$critical%, disk=$disk)"
exit "$ret"
